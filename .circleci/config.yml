---
version: 2.1

executors:
  node_executor:
    docker:
      - image: circleci/node:14-buster
  docker_tests_executor:
    machine:
      image: ubuntu-1604:202004-01 #Ubuntu 16.04, docker 19.03.8, docker-compose 1.25.5
      docker_layer_caching: true
    resource_class: xlarge

commands:
  prepare_docker_machine:
    description: "checkout, install all packages required by Ubuntu Docker machines and handle cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - run:
          name: install base packages
          command: |
            sudo apt-get update
            sudo apt-get install -y git python make gcc g++ bash curl
      - run:
          name: install node
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install node
      - run:
          name: install node packages
          command: npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}

  prepare_node:
    description: "checkout, install all packages and handle cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}
jobs:
  build:
    executor: node_executor
    steps:
      - prepare_node
      - run:
          name: build and unit tests
          command: npm run test:unit

  integrationTests:
    executor: docker_tests_executor
    steps:
      - prepare_docker_machine
      - run:
          name: Integration tests
          command: npm run test:integration

  onChainTests:
    executor: docker_tests_executor
    steps:
      - prepare_docker_machine
      - run:
          name: On chain tests
          command: npm run test:onchain

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - integrationTests:
          requires:
            - build
      - onChainTests:
          requires:
            - build
